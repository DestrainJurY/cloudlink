Packet format:
{
   'cmd':(Command),
   'name':(Variable name),
   'id':(A user's ID),
   'val':(Payload),
   'origin':(User ID originally transmitting from),
   'listener':(Unique code for Scratch to handle packets)
}

CloudLink
ds - Handles server soft-shutdown disconnect request
 > parameters: none
 > Sends from server to all clients

ulist - Handles username list data
 > parameters: val (String as primitive array split by ";")
 > Sends from server to all clients

setid - Defines the ID of a user
 > parameters: val - String
 > Sends from any client to server

gmsg - Sends global message data
 > parameters: val (String/Int/Bool/JSON)
 > Sent by both parties (server & clients)

pmsg - Sends private message data
 > parameters: val (String/Int/Bool/JSON), id (String)
 > Sent by both parties (server & clients)

gvar - Sends global variable data
 > parameters: val (String/Int/Bool/JSON), name (String)
 > Sent by both parties (server & clients)

pvar - Sends private variable data
 > parameters: val (String/Int/Bool/JSON), id (String), name (String)
 > Sent by both parties (server & clients)

genprojectid - Generate a new project ID to identify a project on a CloudLink Server
setprojectid - Specifies a project ID on a CloudLink Server

CloudAccount:
auth - Authenticate using password, also generates a new account if not yet created
 > parameters: val - String
 > Sends from client to server
 > Returns JSON

deauth - Logout
 > parameters: none
 > Sends from client to server
 > Returns "OK"

checkauth - Return account info
 > parameters: none
 > Sends from client to server
 > Returns JSON

CloudDisk:
auth - Verify access using an authentication token provided by CloudAccount
 > Parameters: val - String
 > Sends from client to server
 > Returns JSON

deauth - Removes access when finished
 > Parameters: none
 > Sends from client to server
 > Returns "OK"

getftpdir - Gets a list of all files/folders available in a directory
 > Parameters: Parameters: val - String (Directory format: "/folder1/folder2")
 > Sends from client to server
 > Returns String (String as primitive array split by ",")

getftpfile - Downloads a file from server
 > Parameters: Parameters: val - String (Directory format: "/folder1/folder2/file.extension")
 > Sends from client to server
 > Returns String or JSON

putftp - Uploads a file to server
 > Parameters: Parameters: val - JSON
	> JSON format: 
		{
			"filename": (File's name (String, Directory format: "/folder1/folder2/file.extension")),
			"data": (File's contents (String, JSON, etc.))
		}
 > Sends from client to server
 > Returns "OK"

ftpmkdir - Creates directories.
 > Parameters: Parameters: val - String (Directory format: "/folder1/folder2")
 > Sends from client to server
 > Returns "OK"

ftprmdir - Deletes directories (only works if there are no files present in a directory)
 > Parameters: Parameters: val - String (The location of where the directory is to be deleted.)
 > Sends from client to server
 > Returns "OK"

ftprmfile - Deletes files
 > Parameters: Parameters: val - JSON
	> JSON format: 
		{
			"dir": (The directory of where the file is located.),
			"name": (The filename to be deleted.)
		}
 > Sends from client to server
 > Returns "OK"

fetchslot - Reads data stored in a slot
putslot - Writes data into a slot
setftpconfig - Configure a directory/file's permissions, access, visibility, and security settings
getftpinfo - Gets a file/folder's metadata from a server

CloudCoin: (totally not crypto)
auth - Verify access using an authentication token provided by CloudAccount
 > Parameters: val - String
 > Sends from client to server
 > Returns JSON

deauth - Removes access when finished
 > Parameters: none
 > Sends from client to server
 > Returns "OK"

checkassets - Checks how many coins are in circulation for a project ID
getinfo - Get account info
getcoinuuids - Returns a list of all coin uuids the user's account has accumulated
mine - Attempts to mine a coin (RNG-based chance of generating a coin), generates a new coin with randomized value and uuid for earning/spending
earn - Adds x amount of coins to a user's account, requires specifying coin uuids to be spent
spend - Uses x amount of coins from a user's account, requires specifying coin uuids to be earnt
convertlocaltoglobal - Converts a specific project ID's CloudCoin market value to the public CloudCoin market value.
convertglobaltolocal - Converts the public CloudCoin market value to a specific project ID's CloudCoin market value.
